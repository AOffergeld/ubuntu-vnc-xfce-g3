# syntax=docker/dockerfile:experimental

ARG BASEIMAGE=ubuntu
ARG BASETAG=20.04

ARG ARG_FINAL_STAGE_BASE=stage_vnc


###############
### stage_cache
###############

FROM ${BASEIMAGE}:${BASETAG} as stage_cache

RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
RUN apt-get update
    # --mount=type=cache,target=/var/cache/apt \
    # --mount=type=cache,target=/var/lib/apt \


####################
### stage_essentials
####################

FROM ${BASEIMAGE}:${BASETAG} as stage_essentials

SHELL ["/bin/bash", "-c"]

RUN \
    --mount=type=cache,target=/var/cache/apt,from=stage_cache,source=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt,from=stage_cache,source=/var/lib/apt \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        jq \
        nano \
        psmisc \
        sudo \
        tini \
        wget
    # && apt-get -y autoremove \
    # && rm -rf /var/lib/apt/lists/*
        # curl \
        # gdebi-core \
        # git \
        # inetutils-ping \
        # lsb-release \
        # net-tools \
        # unzip \
        # vim \
        # xz-utils \
        # zip \


#################
### stage_xserver
#################

FROM stage_essentials as stage_xserver
ARG ARG_APT_NO_RECOMMENDS

ENV \
    FEATURES_BUILD_SLIM_XSERVER=${ARG_APT_NO_RECOMMENDS:+1} \
    NO_AT_BRIDGE=1
    # LANG='en_US.UTF-8' \
    # LANGUAGE='en_US:en' \
    # LC_ALL='en_US.UTF-8'

RUN \
    --mount=type=cache,target=/var/cache/apt,from=stage_cache,source=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt,from=stage_cache,source=/var/lib/apt \
    DEBIAN_FRONTEND=noninteractive apt-get install -y ${ARG_APT_NO_RECOMMENDS:+--no-install-recommends} \
        dbus-x11 \
        xauth \
        xinit \
        x11-xserver-utils \
        xdg-utils
    # && apt-get -y autoremove \
    # && rm -rf /var/lib/apt/lists/*
        # x11-utils \ # adds 200MB


##############
### stage_xfce
##############

FROM stage_xserver as stage_xfce
ARG ARG_APT_NO_RECOMMENDS

ENV FEATURES_BUILD_SLIM_XFCE=${ARG_APT_NO_RECOMMENDS:+1}

RUN \
    --mount=type=cache,target=/var/cache/apt,from=stage_cache,source=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt,from=stage_cache,source=/var/lib/apt \
    DEBIAN_FRONTEND=noninteractive apt-get install -y ${ARG_APT_NO_RECOMMENDS:+--no-install-recommends} \
        xfce4 \
        xfce4-terminal
    # && apt-get -y autoremove \
    # && rm -rf /var/lib/apt/lists/*
    # && apt-get purge -y \
    #     pm-utils \
    #     xscreensaver* \


###############
### stage_tools
###############

FROM stage_xfce as stage_tools
ARG ARG_APT_NO_RECOMMENDS
ARG ARG_FEATURES_SCREENSHOOTING
ARG ARG_FEATURES_THUMBNAILING

ENV \
    FEATURES_BUILD_SLIM_TOOLS=${ARG_APT_NO_RECOMMENDS:+1} \
    FEATURES_SCREENSHOOTING=${ARG_FEATURES_SCREENSHOOTING:+1} \
    FEATURES_THUMBNAILING=${ARG_FEATURES_THUMBNAILING:+1}

RUN \
    --mount=type=cache,target=/var/cache/apt,from=stage_cache,source=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt,from=stage_cache,source=/var/lib/apt \
    DEBIAN_FRONTEND=noninteractive apt-get install -y ${ARG_APT_NO_RECOMMENDS:+--no-install-recommends} \
        dconf-editor \
        mousepad \
        ${ARG_FEATURES_SCREENSHOOTING:+ristretto xfce4-screenshooter} \
        ${ARG_FEATURES_THUMBNAILING:+tumbler}
    # && apt-get -y autoremove \
    # && rm -rf /var/lib/apt/lists/*
        # ristretto \
        # xfce4-screenshooter \
        # tumbler \


#############
### stage_vnc
#############

FROM stage_tools as stage_vnc

ENV FEATURES_VNC=1

RUN \
    wget -qO- https://dl.bintray.com/tigervnc/stable/tigervnc-1.11.0.x86_64.tar.gz | tar xz --strip 1 -C / \
    && ln -s /usr/libexec/vncserver /usr/bin/vncserver \
    && sed -i 's/exec(@cmd);/print "@cmd";\nexec(@cmd);/g' /usr/libexec/vncserver


###############
### stage_novnc
###############

FROM stage_vnc as stage_novnc
ARG ARG_APT_NO_RECOMMENDS

### using the same parent path as TigerVNC
ENV \
    FEATURES_BUILD_SLIM_NOVNC=${ARG_APT_NO_RECOMMENDS:+1} \
    FEATURES_NOVNC=1 \
    NO_VNC_HOME=/usr/libexec/noVNCdim \
    NO_VNC_PORT="6901"

RUN \
    --mount=type=cache,target=/var/cache/apt,from=stage_cache,source=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt,from=stage_cache,source=/var/lib/apt \
    DEBIAN_FRONTEND=noninteractive apt-get install -y ${ARG_APT_NO_RECOMMENDS:+--no-install-recommends} \
        python-numpy \
    && mkdir -p ${NO_VNC_HOME}/utils/websockify \
    && wget -qO- https://github.com/novnc/noVNC/archive/v1.2.0.tar.gz | tar xz --strip 1 -C ${NO_VNC_HOME} \
    && wget -qO- https://github.com/novnc/websockify/archive/v0.9.0.tar.gz | tar xz --strip 1 -C ${NO_VNC_HOME}/utils/websockify \
    && chmod +x -v ${NO_VNC_HOME}/utils/*.sh \
    && ln -s /usr/bin/python2.7 /usr/bin/python
    # && apt-get -y autoremove \
    # && rm -rf /var/lib/apt/lists/*

### add 'index.html' for choosing noVNC client
RUN echo -e \
"<!DOCTYPE html>\n" \
"<html>\n" \
"    <head>\n" \
"        <title>noVNC</title>\n" \
"        <meta charset=\"utf-8\"/>\n" \
"    </head>\n" \
"    <body>\n" \
"        <p><a href=\"vnc_lite.html\">noVNC Lite Client</a></p>\n" \
"        <p><a href=\"vnc.html\">noVNC Full Client</a></p>\n" \
"    </body>\n" \
"</html>" \
> ${NO_VNC_HOME}/index.html

EXPOSE ${NO_VNC_PORT}


###############
### FINAL STAGE
###############

FROM ${ARG_FINAL_STAGE_BASE} as stage_final
ARG ARG_FEATURES_USER_GROUP_OVERRIDE
ARG ARG_HOME
ARG ARG_VNC_PW
ARG ARG_VNC_RESOLUTION
ARG ARG_VNC_VIEW_ONLY

ENV \
    FEATURES_USER_GROUP_OVERRIDE=${ARG_FEATURES_USER_GROUP_OVERRIDE:+1} \
    FEATURES_VERSION_STICKER=1 \
    DISPLAY=:1 \
    HOME=${ARG_HOME:-/home/headless} \
    STARTUPDIR=/dockerstartup \
    VNC_COL_DEPTH=24 \
    VNC_PORT="5901" \
    VNC_PW=${ARG_VNC_PW:-headless} \
    VNC_RESOLUTION=${ARG_VNC_RESOLUTION:-1360x768} \
    VNC_VIEW_ONLY=${ARG_VNC_VIEW_ONLY:-false}

WORKDIR ${HOME}

COPY [ "./xfce/src/startup", "${STARTUPDIR}/" ]
COPY [ "./xfce/src/home/Desktop", "${HOME}/Desktop/" ]
COPY [ "./xfce/src/home/config/xfce4", "${HOME}/.config/xfce4/" ]

### Create the default application user (non-root, but member of the group zero)
### and allow the group zero to modify '/etc/passwd' and '/etc/group'.
### Providing the build argument ARG_SUPPORT_USER_GROUP_OVERRIDE (set to anything) allows any user
### to modify both files and makes user group overriding possible (like 'run --user x:y').
RUN \
    chmod 664 /etc/passwd /etc/group \
    && echo "headless:x:1001:0:Default:${HOME}:/bin/bash" >> /etc/passwd \
    && adduser headless sudo \
    && echo "headless:${VNC_PW}" | chpasswd \
    && ${ARG_FEATURES_USER_GROUP_OVERRIDE/*/chmod a+w /etc/passwd /etc/group} \
    && chmod +x "${STARTUPDIR}"/*.sh \
    && "${STARTUPDIR}"/set_user_permissions.sh "${STARTUPDIR}" "${HOME}"

EXPOSE ${VNC_PORT}

USER 1001

ENTRYPOINT [ "/usr/bin/tini", "--", "/dockerstartup/startup.sh" ]
# ENTRYPOINT [ "/usr/bin/tini", "--", "tail", "-f", "/dev/null" ]


##################
### METADATA STAGE
##################

FROM stage_final as stage_metadata
ARG ARG_CREATED
ARG ARG_DOCKER_TAG
ARG ARG_VCS_REF
ARG ARG_VERSION_STICKER

LABEL \
    org.opencontainers.image.authors="accetto" \
    org.opencontainers.image.created="${ARG_CREATED}" \
    org.opencontainers.image.description="Headless Ubuntu/Xfce containers with VNC/noVNC" \
    org.opencontainers.image.documentation="https://github.com/accetto/ubuntu-vnc-xfce-g3" \
    org.opencontainers.image.source="https://github.com/accetto/ubuntu-vnc-xfce-g3" \
    org.opencontainers.image.title="accetto/ubuntu-vnc-xfce-g3" \
    org.opencontainers.image.url="https://github.com/accetto/ubuntu-vnc-xfce-g3" \
    org.opencontainers.image.vendor="https://github.com/accetto" \
    org.opencontainers.image.version="${ARG_DOCKER_TAG}"

LABEL \
    org.label-schema.vcs-url="https://github.com/accetto/ubuntu-vnc-xfce-g3" \
    org.label-schema.vcs-ref="${ARG_VCS_REF}"

LABEL \
    any.accetto.version-sticker="${ARG_VERSION_STICKER}"
